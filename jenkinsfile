pipeline { 
    agent any
    environment {
    BUILD = "${env.BUILD_NUMBER}"
    SLACK_TOKEN = credentials('slack-token')
    }
    stages {
        stage('Clone repository') { 
            steps { 
                git url: 'https://github.com/snoopykill/PythonFlaskMySQLApp.git'
            }
        }
        stage('Checking repository'){
            steps { 
                sh "ls -l"
            }
        }
        stage('Build docker') {
            steps {
            script {
            dockerImage = docker.build("snoopykill/python-app")
            }
            }
        }
        stage('Push docker') {
            steps {
              script {
            docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
            dockerImage.push("${env.BUILD_NUMBER}")
            dockerImage.push("latest")
            }
            }
            }
        }
        stage('Docker compose') {
            steps {
            script {
            sh """
                       		docker-compose down
							docker-compose up -d
                """
            }
            }
        }
        stage('Test site by Apache Bench') {
            steps {
            script {
                sh """
                       		ab -n 100 -c 10 -r http://127.0.0.1:50000/ > project.txt
                       		curl -F file=@project.txt -F channels=CLBKQPFB5 -F token=${env.SLACK_TOKEN} https://slack.com/api/files.upload
		                """
        }
            }
        }
    }
    post {
            success {
                slackSend (color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            }
            failure {
                script {
                    BUILD = "${env.BUILD_NUMBER.toInteger() - 1}"
                sh """      echo $BUILD
                      		docker-compose down
							docker-compose up -d
                      		ab -n 100 -c 10 -r http://127.0.0.1:50000/ > project.txt
                       		curl -F file=@project.txt -F channels=CLBKQPFB5 -F token=${env.SLACK_TOKEN} https://slack.com/api/files.upload
                """
            } 
                    
                slackSend (color: '#FF0000', message: "FAILED - RECOVERY PREV. BUILD : Job '${env.JOB_NAME} [${env.BUILD_NUMBER.toInteger() - 1}]' (${env.BUILD_URL})")
            }
        }
}
